{"ast":null,"code":"var _jsxFileName = \"G:\\\\ETE\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nfunction App() {\n  const [task, setTask] = useState({\n    title: '',\n    description: ''\n  });\n  const [tasks, setTasks] = useState([]);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Title validation\n    if (!task.title.trim()) {\n      newErrors.title = 'Title is required';\n    } else if (task.title.trim().length < 3) {\n      newErrors.title = 'Title must be at least 3 characters long';\n    } else if (task.title.trim().length > 100) {\n      newErrors.title = 'Title cannot exceed 100 characters';\n    }\n\n    // Description validation\n    if (task.description && task.description.trim().length > 500) {\n      newErrors.description = 'Description cannot exceed 500 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/tasks');\n      setTasks(response.data.data);\n    } catch (error) {\n      setMessage({\n        text: 'Error fetching tasks. Please try again.',\n        type: 'error'\n      });\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTask(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/tasks', task);\n      setMessage({\n        text: 'Task created successfully!',\n        type: 'success'\n      });\n      setTask({\n        title: '',\n        description: ''\n      });\n      fetchTasks();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage({\n        text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error creating task',\n        type: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Todo Task Manager\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    name: \"title\",\n    value: task.title,\n    onChange: handleChange,\n    className: errors.title ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 28\n    }\n  }, errors.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    name: \"description\",\n    value: task.description,\n    onChange: handleChange,\n    className: errors.description ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), errors.description && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 34\n    }\n  }, errors.description)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Add Task\")), message.text && /*#__PURE__*/React.createElement(\"p\", {\n    className: `message ${message.type}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, message.text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Tasks\"), tasks.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"No tasks yet. Add one above!\") : tasks.map(task => /*#__PURE__*/React.createElement(\"div\", {\n    key: task._id,\n    className: \"task-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, task.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"span\", {\n    className: `status ${task.status}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, task.status)))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","App","task","setTask","title","description","tasks","setTasks","message","setMessage","text","type","errors","setErrors","fetchTasks","validateForm","newErrors","trim","length","Object","keys","response","get","data","error","handleChange","e","name","value","target","prevTask","prev","handleSubmit","preventDefault","post","_error$response","_error$response$data","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","map","key","_id","status"],"sources":["G:/ETE/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [task, setTask] = useState({\r\n    title: '',\r\n    description: ''\r\n  });\r\n  const [tasks, setTasks] = useState([]);\r\n  const [message, setMessage] = useState({ text: '', type: '' });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  \r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    // Title validation\r\n    if (!task.title.trim()) {\r\n      newErrors.title = 'Title is required';\r\n    } else if (task.title.trim().length < 3) {\r\n      newErrors.title = 'Title must be at least 3 characters long';\r\n    } else if (task.title.trim().length > 100) {\r\n      newErrors.title = 'Title cannot exceed 100 characters';\r\n    }\r\n\r\n    // Description validation\r\n    if (task.description && task.description.trim().length > 500) {\r\n      newErrors.description = 'Description cannot exceed 500 characters';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/tasks');\r\n      setTasks(response.data.data);\r\n    } catch (error) {\r\n      setMessage({\r\n        text: 'Error fetching tasks. Please try again.',\r\n        type: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTask(prevTask => ({\r\n      ...prevTask,\r\n      [name]: value\r\n    }));\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/tasks', task);\r\n      setMessage({\r\n        text: 'Task created successfully!',\r\n        type: 'success'\r\n      });\r\n      setTask({ title: '', description: '' });\r\n      fetchTasks();\r\n    } catch (error) {\r\n      setMessage({\r\n        text: error.response?.data?.error || 'Error creating task',\r\n        type: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo Task Manager</h1>\r\n      <form onSubmit={handleSubmit} className=\"task-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={task.title}\r\n            onChange={handleChange}\r\n            className={errors.title ? 'error' : ''}\r\n          />\r\n          {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description:</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={task.description}\r\n            onChange={handleChange}\r\n            className={errors.description ? 'error' : ''}\r\n          />\r\n          {errors.description && <span className=\"error-message\">{errors.description}</span>}\r\n        </div>\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n      {message.text && (\r\n        <p className={`message ${message.type}`}>{message.text}</p>\r\n      )}\r\n\r\n      <div className=\"tasks-list\">\r\n        <h2>Tasks</h2>\r\n        {tasks.length === 0 ? (\r\n          <p>No tasks yet. Add one above!</p>\r\n        ) : (\r\n          tasks.map((task) => (\r\n            <div key={task._id} className=\"task-item\">\r\n              <h3>{task.title}</h3>\r\n              <p>{task.description}</p>\r\n              <span className={`status ${task.status}`}>{task.status}</span>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAC/BM,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IAAEY,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC9D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAGxCC,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG,CAAC,CAAC;;IAEpB;IACA,IAAI,CAACd,IAAI,CAACE,KAAK,CAACa,IAAI,CAAC,CAAC,EAAE;MACtBD,SAAS,CAACZ,KAAK,GAAG,mBAAmB;IACvC,CAAC,MAAM,IAAIF,IAAI,CAACE,KAAK,CAACa,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACvCF,SAAS,CAACZ,KAAK,GAAG,0CAA0C;IAC9D,CAAC,MAAM,IAAIF,IAAI,CAACE,KAAK,CAACa,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,GAAG,EAAE;MACzCF,SAAS,CAACZ,KAAK,GAAG,oCAAoC;IACxD;;IAEA;IACA,IAAIF,IAAI,CAACG,WAAW,IAAIH,IAAI,CAACG,WAAW,CAACY,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,GAAG,EAAE;MAC5DF,SAAS,CAACX,WAAW,GAAG,0CAA0C;IACpE;IAEAQ,SAAS,CAACG,SAAS,CAAC;IACpB,OAAOG,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACE,MAAM,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMJ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,iCAAiC,CAAC;MACnEf,QAAQ,CAACc,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdf,UAAU,CAAC;QACTC,IAAI,EAAE,yCAAyC;QAC/CC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC1B,OAAO,CAAC2B,QAAQ,KAAK;MACnB,GAAGA,QAAQ;MACX,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;IACH;IACA,IAAIhB,MAAM,CAACe,IAAI,CAAC,EAAE;MAChBd,SAAS,CAACkB,IAAI,KAAK;QACjB,GAAGA,IAAI;QACP,CAACJ,IAAI,GAAG;MACV,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMK,YAAY,GAAG,MAAON,CAAC,IAAK;IAChCA,CAAC,CAACO,cAAc,CAAC,CAAC;IAElB,IAAI,CAAClB,YAAY,CAAC,CAAC,EAAE;MACnB;IACF;IAEA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMrB,KAAK,CAACkC,IAAI,CAAC,iCAAiC,EAAEhC,IAAI,CAAC;MAC1EO,UAAU,CAAC;QACTC,IAAI,EAAE,4BAA4B;QAClCC,IAAI,EAAE;MACR,CAAC,CAAC;MACFR,OAAO,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC,CAAC;MACvCS,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,OAAOU,KAAK,EAAE;MAAA,IAAAW,eAAA,EAAAC,oBAAA;MACd3B,UAAU,CAAC;QACTC,IAAI,EAAE,EAAAyB,eAAA,GAAAX,KAAK,CAACH,QAAQ,cAAAc,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBZ,IAAI,cAAAa,oBAAA,uBAApBA,oBAAA,CAAsBZ,KAAK,KAAI,qBAAqB;QAC1Db,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEd,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClB/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,mBAAqB,CAAC,eAC1B/C,KAAA,CAAAwC,aAAA;IAAMQ,QAAQ,EAAEb,YAAa;IAACM,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjD/C,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB/C,KAAA,CAAAwC,aAAA;IAAOS,OAAO,EAAC,OAAO;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAa,CAAC,eACrC/C,KAAA,CAAAwC,aAAA;IACE1B,IAAI,EAAC,MAAM;IACXoC,EAAE,EAAC,OAAO;IACVpB,IAAI,EAAC,OAAO;IACZC,KAAK,EAAE1B,IAAI,CAACE,KAAM;IAClB4C,QAAQ,EAAEvB,YAAa;IACvBa,SAAS,EAAE1B,MAAM,CAACR,KAAK,GAAG,OAAO,GAAG,EAAG;IAAAmC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxC,CAAC,EACDhC,MAAM,CAACR,KAAK,iBAAIP,KAAA,CAAAwC,aAAA;IAAMC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEhC,MAAM,CAACR,KAAY,CAClE,CAAC,eACNP,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB/C,KAAA,CAAAwC,aAAA;IAAOS,OAAO,EAAC,aAAa;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAAmB,CAAC,eACjD/C,KAAA,CAAAwC,aAAA;IACEU,EAAE,EAAC,aAAa;IAChBpB,IAAI,EAAC,aAAa;IAClBC,KAAK,EAAE1B,IAAI,CAACG,WAAY;IACxB2C,QAAQ,EAAEvB,YAAa;IACvBa,SAAS,EAAE1B,MAAM,CAACP,WAAW,GAAG,OAAO,GAAG,EAAG;IAAAkC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9C,CAAC,EACDhC,MAAM,CAACP,WAAW,iBAAIR,KAAA,CAAAwC,aAAA;IAAMC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEhC,MAAM,CAACP,WAAkB,CAC9E,CAAC,eACNR,KAAA,CAAAwC,aAAA;IAAQ1B,IAAI,EAAC,QAAQ;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAClC,CAAC,EACNpC,OAAO,CAACE,IAAI,iBACXb,KAAA,CAAAwC,aAAA;IAAGC,SAAS,EAAE,WAAW9B,OAAO,CAACG,IAAI,EAAG;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEpC,OAAO,CAACE,IAAQ,CAC3D,eAEDb,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAS,CAAC,EACbtC,KAAK,CAACY,MAAM,KAAK,CAAC,gBACjBrB,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,8BAA+B,CAAC,GAEnCtC,KAAK,CAAC2C,GAAG,CAAE/C,IAAI,iBACbL,KAAA,CAAAwC,aAAA;IAAKa,GAAG,EAAEhD,IAAI,CAACiD,GAAI;IAACb,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvC/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK1C,IAAI,CAACE,KAAU,CAAC,eACrBP,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI1C,IAAI,CAACG,WAAe,CAAC,eACzBR,KAAA,CAAAwC,aAAA;IAAMC,SAAS,EAAE,UAAUpC,IAAI,CAACkD,MAAM,EAAG;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE1C,IAAI,CAACkD,MAAa,CAC1D,CACN,CAEA,CACF,CAAC;AAEV;AAEA,eAAenD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}